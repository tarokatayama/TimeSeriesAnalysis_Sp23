main = "ACF Residential Electricity Price")
#Using R decompose function
decompose_residential_price <- decompose(ts_electricity_price[,"Residential"],"additive")
plot(decompose_residential_price)
#Creating non-seasonal residential price time series
deseasonal_residential_price <- seasadj(decompose_residential_price)
df_residential <- data.frame( Month = electricity_price_processed$Month,
Residential = electricity_price_processed$Residential,
NonSeasonalResidential = as.numeric(deseasonal_residential_price))
ggplot(df_residential, aes(x=Month)) +
geom_line(aes(x=Month,y=Residential),color="black") +
geom_line(aes(x=Month,y=NonSeasonalResidential),color="blue")
#Comparing ACFs
par(mar=c(3,3,3,0));par(mfrow=c(1,2))
Acf(df_residential$Residential,lag.max=40,main="Residential")
Acf(df_residential$NonSeasonalResidential,lag.max=40,main="Non Sesonal Residential")
#Comparing PACFs
par(mar=c(3,3,3,0));par(mfrow=c(1,2))
Pacf(df_residential$Residential,lag.max=40,main="Residential")
Pacf(df_residential$NonSeasonalResidential,lag.max=40,main="Non Sesonal Residential")
#Run ADF
#adf.test(deseasonal_price,alternative="stationary")
print((adf.test(deseasonal_residential_price,alternative="stationary")))
#Note that p-value greater then 0.05 so we accept H0. Data has stochastic trend
#Lets difference the series to remove the trend.
#Difference the data at lag 1
deseasonal_residential_price_diff <- diff(deseasonal_residential_price,differences=1)
#Add the new series to our data frame
df_residential_full <-
df_residential %>%
cbind(ResidentialDiff = c(NA,as.numeric(deseasonal_residential_price_diff))) %>%
na.omit(residentialDiff)
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
Acf(df_residential_full$Residential,lag.max=40,main="Residential",ylim=c(-.2,1))
Acf(df_residential_full$NonSeasonalResidential,lag.max=40,main="Non Sesonal Residential",ylim=c(-.2,1))
Acf(df_residential_full$ResidentialDiff,lag.max=40,main="Diff NonSeas Residential",ylim=c(-.2,1))
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
Pacf(df_residential_full$Residential,lag.max=40,main="Residential",ylim=c(-.2,1))
Pacf(df_residential_full$NonSeasonalResidential,lag.max=40,main="Non Sesonal Residential",ylim=c(-.2,1))
Pacf(df_residential_full$ResidentialDiff,lag.max=40,main="Diff NonSeas Residential",ylim=c(-.2,1))
Model_111 <- Arima(deseasonal_residential_price,order=c(1,1,1),include.drift=TRUE)
print(Model_111)
compare_aic <- data.frame(Model_111$aic)
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
ts.plot(Model_111$residuals)
Acf(Model_111$residuals,lag.max=40)
Pacf(Model_111$residuals,lag.max=40)
Model_011 <- Arima(deseasonal_residential_price,order=c(0,1,1),include.drift=TRUE)
print(Model_011)
compare_aic <- data.frame(compare_aic,Model_011$aic)
compare_aic
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
ts.plot(Model_011$residuals)
Acf(Model_011$residuals,lag.max=40)
Pacf(Model_011$residuals,lag.max=40)
Model_211 <- Arima(deseasonal_residential_price,order=c(2,1,1),include.drift=TRUE)
print(Model_211)
compare_aic <- data.frame(compare_aic,Model_211$aic)
compare_aic
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
ts.plot(Model_211$residuals)
Acf(Model_211$residuals,lag.max=40)
Pacf(Model_211$residuals,lag.max=40)
Model_112 <- Arima(deseasonal_residential_price,order=c(1,1,2),include.drift=TRUE)
print(Model_112)
compare_aic <- data.frame(compare_aic,Model_112$aic)
compare_aic
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
ts.plot(Model_112$residuals)
Acf(Model_112$residuals,lag.max=40)
Pacf(Model_112$residuals,lag.max=40)
Model_212 <- Arima(deseasonal_residential_price,order=c(2,1,2),include.drift=TRUE)
print(Model_212)
compare_aic <- data.frame(compare_aic,Model_212$aic)
compare_aic
par(mar=c(3,3,3,0));par(mfrow=c(1,3))
ts.plot(Model_212$residuals)
Acf(Model_212$residuals,lag.max=40)
Pacf(Model_212$residuals,lag.max=40)
Model_autofit <- auto.arima(deseasonal_residential_price,max.D=0,max.P = 0,max.Q=0)
print(Model_autofit)
Model_101 <- Arima(deseasonal_residential_price,order=c(1,0,1))
df_models <- data.frame(
date = electricity_price_processed$Month,
observed = as.numeric(deseasonal_residential_price),
ARIMA_111 = as.numeric(Model_111$fitted),
ARIMA_011 = as.numeric(Model_011$fitted),
ARIMA_auto = as.numeric(Model_autofit$fitted),
ARIMA_211 = as.numeric(Model_211$fitted)
)
Plot1 <-
ggplot(df_models) +
geom_line(aes(x=date,y=observed),color="black") +
geom_line(aes(x=date,y=ARIMA_111),color="red")
Plot2 <-
ggplot(df_models) +
geom_line(aes(x=date,y=observed),color="black") +
geom_line(aes(x=date,y=ARIMA_011),color="blue")
Plot3 <-
ggplot(df_models) +
geom_line(aes(x=date,y=observed),color="black") +
geom_line(aes(x=date,y=ARIMA_auto),color="green")
Plot4 <-
ggplot(df_models) +
geom_line(aes(x=date,y=observed),color="black") +
geom_line(aes(x=date,y=ARIMA_211),color="orange")
cowplot::plot_grid(Plot1,Plot2,Plot3,Plot4,nrow=2)
#Load/install required package here
#install.packages("xlsx")
library(readxl)
#install.packages("openxlsx")
library(openxlsx)
library(forecast)
library(tseries)
library(ggplot2)
library(Kendall)
library(lubridate)
library(tidyverse)  #load this package so yon clean the data frame using pipes
#Load/install required package here
#install.packages("xlsx")
library(readxl)
#install.packages("openxlsx")
library(openxlsx)
library(forecast)
library(tseries)
library(ggplot2)
library(Kendall)
library(lubridate)
library(tidyverse)  #load this package so yon clean the data frame using pipes
#Load/install required package here
#install.packages("xlsx")
library(readxl)
#install.packages("openxlsx")
library(openxlsx)
library(forecast)
library(tseries)
library(ggplot2)
library(Kendall)
library(lubridate)
library(tidyverse)  #load this package so yon clean the data frame using pipes
energy_data<- read.table(file= "./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source-Edit.csv",
header=TRUE,dec = ".",sep=",",stringsAsFactors = TRUE)
View(energy_data)
View(energy_data)
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source-Edit.csv")
energy_data<-read_excel("../Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx")
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx")
View(energy_data)
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip=11)
View(energy_data)
read_col_names <- read.xlsx("/Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",header=FALSE,startRow = 11,endRow=11,sheetIndex=1)
read_col_names <- read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",header=FALSE,startRow = 11,endRow=11,sheetIndex=1)
read_col_names <- read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",startRow = 11,endRow=11,sheetIndex=1)
?read_excel
read_col_names <- read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip = 10, range = 1)
read_col_names <- read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip = 10, n_max = 1)
View(read_col_names)
read_col_names <- read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip = 10, n_max = 0)
View(read_col_names)
View(energy_data)
colnames(energy_data) <- read_col_names
View(energy_data)
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 10, n_max = 0))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 10, n_max = 1))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 11, n_max = 1))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 9, n_max = 1))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 10, n_max = 1))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 9, n_max = 1))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 9, n_max = 1,col_names = TRUE))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 9, n_max = 1,col_names = FALSE))
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 10, n_max = 1,col_names = FALSE))
colnames(energy_data) <- read_col_names
View(energy_data)
energy_data1<- read.table(file= "./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source-Edit.csv",
header=TRUE,dec = ".",sep=",",stringsAsFactors = TRUE)
View(energy_data1)
head(energy_data)
nobs=nrow(energy_data)
nvar=ncol(energy_data)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)
View(df)
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip=11, na=TRUE)
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip=11, na)
?filter
?as.numeric
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
as.numeric(`Solar Energy Consumption`, `Wind Energy Consumption`)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
filter(!row_number(1:132))
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
`Solar Energy Consumption`= as.numeric()
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
`Solar Energy Consumption`= as.numeric(`Solar Energy Consumption`)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
as.numeric(`Solar Energy Consumption`)
as.numeric(df$`Solar Energy Consumption`)
View(df)
df$`Solar Energy Consumption`<- as.numeric(df$`Solar Energy Consumption`)
View(df)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
as.numeric(`Solar Energy Consumption`)%>%
df$`Solar Energy Consumption`<- as.numeric(df$`Solar Energy Consumption`)
df$`Wind Energy Consumption`<- as.numeric(df$`Wind Energy Consumption`)
View(df)
df<-df%>%
drop_na()
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
as.numeric(`Solar Energy Consumption`)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)%>%
as.numeric(`Solar Energy Consumption`)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)
df$`Solar Energy Consumption`<- as.numeric(df$`Solar Energy Consumption`)
df$`Wind Energy Consumption`<- as.numeric(df$`Wind Energy Consumption`)
df<-df%>%
drop_na()
df$Month<- ym(df$Month)
df$Month<- ymd(df$Month)
energy_data<-read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",skip=11)
#Now let's extract the column names from row 11 only
read_col_names <- as.character(read_excel("./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source.xlsx",
skip = 10, n_max = 1,col_names = FALSE))
colnames(energy_data) <- read_col_names
head(energy_data)
View(energy_data)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)
df$`Solar Energy Consumption`<- as.numeric(df$`Solar Energy Consumption`)
df$`Wind Energy Consumption`<- as.numeric(df$`Wind Energy Consumption`)
df<-df%>%
drop_na()
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
ylab("Solar Energy Consumption (Trillion Btu)")
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
solar_plot
?as.Date
df$Month<- as.Date(df$Month, "%Y-%m-%d")
df$Month<- as.Date(df$Month, "%Y-%m-%d", 'GMT')
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
labs(x="Year", y="Solar Energy Consumption (Trillion BTU)")
solar_plot
solar_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Solar Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
labs(x="Year", y="Solar Energy Consumption (Trillion BTU)")+
theme_bw()
solar_plot
wind_plot<- ggplot(df)+
geom_line(aes(x=Month, y = `Wind Energy Consumption`))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
labs(x="Year", y="Wind Energy Consumption (Trillion BTU)")+
theme_bw()
wind_plot
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="blue"))+
geom_line(aes(y=`Solar Energy Consumption`,color ="red"))
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="blue"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="red"))
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="blue"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="red"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Wind Energy" = "blue", "Solar Energy" = "red"),
labels=c("Manually calculated", "From decompose function"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Wind Energy" = "blue", "Solar Energy" = "red"),
labels=c("Wind Energy", "Solar Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
wind_plot
solar_plot
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "blue", "Wind Energy" = "red"),
labels=c("Wind Energy", "Solar Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "blue", "Wind Energy" = "red"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Wind Energy", "Solar Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
wind_plot
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Wind Energy", "Solar Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")
both_plots
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
ylab(y="Energy Consumption (Trillion BTU", x="Year")
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
ylab(y="Energy Consumption (Trillion BTU)", x="Year")
both_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
labs(x="Year", y="Energy Consumption (Trillion BTU)")+
theme_bw()
both_plots
wind_solar_plots<-ggplot(df)+
geom_line(aes(x=Month, y=`Wind Energy Consumption`, color="Wind Energy"))+
geom_line(aes(x=Month, y=`Solar Energy Consumption`,color ="Solar Energy"))+
labs(color="") +
scale_color_manual(values = c("Solar Energy" = "red", "Wind Energy" = "blue"),
labels=c("Solar Energy", "Wind Energy"))+
scale_x_date(date_breaks = "5 years", date_labels = "%Y")+
labs(x="Year", y="Energy Consumption (Trillion BTU)")+
theme_bw()
wind_solar_plots
ts_df<- ts(df, frequency = 12)
View(wind_plot)
View(ts_df)
ts_df<- ts(df[,2:3], frequency = 12)
View(ts_df)
df<- energy_data%>%
select(Month, `Solar Energy Consumption`, `Wind Energy Consumption`)
df$`Solar Energy Consumption`<- as.numeric(df$`Solar Energy Consumption`)
df$`Wind Energy Consumption`<- as.numeric(df$`Wind Energy Consumption`)
df<-df%>%
drop_na()
df$Month<- as.Date(df$Month, "%Y-%m-%d", 'GMT')
ts_df<- ts(df[,2:3], frequency = 12)
View(ts_df)
wind_decompose<-  decompose(ts_df[,2], type = "additive")
plot(wind_decompose)
solar_decompose<-  decompose(ts_df[,1], type = "additive")
plot(solar_decompose)
```
solar_decompose<-  decompose(ts_df[,1], type = "additive")
plot(solar_decompose)
plot(wind_decompose)
plot(solar_decompose)
plot(wind_decompose)
plot(solar_decompose)
plot(solar_decompose)
plot(wind_decompose)
plot(wind_decompose)
plot(solar_decompose)
plot(solar_decompose)
plot(wind_decompose)
wind_decompose2<-  decompose(ts_df[,2], type = "multiplicative")
plot(wind_decompose2)
solar_decompose2<-  decompose(ts_df[,1], type = "multiplicative")
plot(solar_decompose2)
plot(wind_decompose2)
plot(solar_decompose)
plot(wind_decompose)
plot(solar_decompose2)
plot(wind_decompose2)
wind_solar_plots
View(df)
df.2012<- df%>%
filter(df, year(Date) >= 2012)
View(df)
df.2012<- df%>%
filter(df, year(Month) >= 2012)
df.2012<- df%>%
filter(df$Month, year(Month) >= 2012)
df.2012<- df%>%
filter(df$Month, year(Date) >= 2012)
?filter
filter(df, month >= 2012)
filter(df, year(month) >= 2012)
filter(df, date >= "2012-01-01")
View(df)
df%>%
filter(date>= "2012-01-01")
View(df)
df%>%
filter(Month>= "2012-01-01")
View(df)
df_2012<- df%>%
filter(Month>= "2012-01-01")
View(df_2012)
df_2012<- df%>%
filter(year(Month)>= "2012")
View(df_2012)
df_2012<- df%>%
filter(year(Month)>= "2012")
View(df_2012)
ts_df_2012<- ts(df_2012[,2:3], frequency = 12)
View(ts_df_2012)
decompose_2012_solar<-  decompose(ts_df_2012[,1], type = "addititve")
decompose_2012_solar<-  decompose(ts_df_2012[,1], type = "additive")
plot(decompose_2012_solar)
decompose_2012_wind<-  decompose(ts_df_2012[,2], type = "additive")
plot(decompose_2012_wind)
#Load/install required package here
library(forecast)
#install.packages("tseries")
#install.packages("dplyr")
library(dplyr)
library(tseries)
library(lubridate)
library(ggplot2)
#Importing data set
table_10.1<- read.table(file= "./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source-Edit.csv",
header=TRUE,dec = ".",sep=",",stringsAsFactors = TRUE)
table_10.1<-cbind(date, table_10.1[,2:4])
View(table_10.1)
table_10.1<- table_10.1[, c("Month", "Total.Biomass.Energy.Production", "Total.Renewable.Energy.Production", "Hydroelectric.Power.Consumption")]
head(table_10.1)
View(table_10.1)
#Importing data set
table_10.1<- read.table(file= "./Data/Table_10.1_Renewable_Energy_Production_and_Consumption_by_Source-Edit.csv",
header=TRUE,dec = ".",sep=",",stringsAsFactors = TRUE)
View(table_10.1)
